# Ime pipeline-a za backend
name: Backend CI

# Dogodki, ki sprožijo workflow (push in pull request na glavno vejo)
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job za gradnjo backenda
  build-backend:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: rootpassword123
          MYSQL_DATABASE: projectdb
          MYSQL_USER: projectuser
          MYSQL_PASSWORD: projectpass123

    steps:
    - name: Checkout code  # Kloniranje repozitorija
      uses: actions/checkout@v3

    - name: Setup Node.js  # Namestitev Node.js okolja
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Cache node_modules  # Caching odvisnosti za backend
      uses: actions/cache@v3
      with:
        path: aplikacija/backend/node_modules
        key: ${{ runner.os }}-backend-${{ hashFiles('aplikacija/backend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-backend-

    - name: Install dependencies  # Namestitev odvisnosti za backend
      run: |
        cd aplikacija/backend
        npm ci

    - name: Wait for MySQL to be ready
      run: |
        for i in {30..0}; do
          if mysqladmin ping -h 127.0.0.1 --silent; then
            break
          fi
          echo "Waiting for MySQL to initialize..."
          sleep 1
        done

    - name: Initialize database
      run: |
        mysql --host=127.0.0.1 --user=projectuser --password=projectpass123 projectdb < aplikacija/backend/db/db_setup.sql

    - name: Build backend  # Gradnja backenda
      run: echo "No build step for backend"

    - name: Upload backend artifacts  # Shranjevanje artefaktov za backend
      uses: actions/upload-artifact@v4
      with:
        name: backend-build  # Ime artefakta
        path: aplikacija/backend/build  # Pot do artefaktov

  # Job za testiranje backenda
  test-backend:
    needs: build-backend  # Testiranje se izvede po uspešni gradnji backenda
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code  # Kloniranje repozitorija
      uses: actions/checkout@v3

    - name: Setup Node.js  # Namestitev Node.js okolja
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Cache node_modules  # Caching odvisnosti za backend
      uses: actions/cache@v3
      with:
        path: aplikacija/backend/node_modules
        key: ${{ runner.os }}-backend-${{ hashFiles('aplikacija/backend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-backend-

    - name: Install dependencies  # Namestitev odvisnosti za backend
      run: |
        cd aplikacija/backend
        npm ci

    - name: Run tests with coverage  # Izvajanje testov s pokritostjo za backend
      run: |
        cd aplikacija/backend
        npm run test:ci

    - name: Upload coverage report  # Shranjevanje poročila o pokritosti kode
      uses: actions/upload-artifact@v4
      with:
        name: backend-coverage
        path: aplikacija/backend/coverage/
